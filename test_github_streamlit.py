
"""test-github-streamlit.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1ub7DmuX4IyP0cUu2Emk1Q1I8OumpvX6I


import streamlit as st
import yfinance as yf

# Liste des tickers
tickers = ['TTE.PA', 'AIR.PA', 'BNP.PA', 'OR.PA', 'KER.PA']

st.title("Dashboard des performances boursières")

# Sélection d'une entreprise
ticker = st.selectbox("Sélectionnez une entreprise :", tickers)

# Récupération des données
data = yf.download(ticker, start="2019-01-01", end="2023-12-31")

if not data.empty:
    st.line_chart(data['Close'])
else:
    st.error("Aucune donnée disponible.")
    



import yfinance as yf
import streamlit as st
import matplotlib.pyplot as plt

# Sélectionner le ticker
ticker = st.selectbox("Sélectionnez une entreprise :", ["TTE.PA", "AAPL", "GOOG"])

# Télécharger les données boursières
data = yf.download(ticker, start="2019-01-01", end="2023-12-31")

# Afficher le graphique de prix de clôture
st.line_chart(data['Close'])

# Créer un graphique avec des événements
plt.figure(figsize=(12, 6))
plt.plot(data['Close'], label='Prix de clôture')

# Affichage dans Streamlit
st.pyplot(plt)
"""
import yfinance as yf
import pandas as pd
import matplotlib.pyplot as plt
import numpy as np
import streamlit as st

# Sélectionner le ticker
Total = st.selectbox("Sélectionnez une entreprise :", ["TTE.PA", "AAPL", "GOOG"])

# Téléchargement des données historiques pour TotalEnergies
#Total = yf.Ticker("TTE.PA")

# Création du DataFrame
df = Total.history(start="2000-01-01")
df = df.drop(columns=["Dividends", "Stock Splits"])


# Calcul du pourcentage de valeurs manquantes
for col in df.columns:
    percent_missing = np.mean(df[col].isnull())

# Afficher le graphique de prix de clôture
st.line_chart(df['Close'])

df['Close'].plot(figsize=(10, 6), title='Évolution du prix de clôture')
plt.ylabel('Prix de clôture (€)')
plt.xlabel('Date')
plt.grid()
plt.show()
